local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local RobloxUI = {}

function RobloxUI:CreateWindow(titleText)
    titleText = titleText or "Roblox UI Library"

    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "RobloxUILibrary"
    ScreenGui.Parent = game:GetService("CoreGui")

    local MainFrame = Instance.new("Frame")
    MainFrame.Size = UDim2.new(0, 500, 0, 300)
    MainFrame.Position = UDim2.new(0.5, -250, 0.5, -150)
    MainFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    MainFrame.BorderSizePixel = 0
    MainFrame.Active = true
    MainFrame.Draggable = true
    MainFrame.Parent = ScreenGui

    -- Adicionando bordas arredondadas
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 6)
    UICorner.Parent = MainFrame

    local TitleBar = Instance.new("Frame")
    TitleBar.Size = UDim2.new(1, 0, 0, 30)
    TitleBar.BackgroundColor3 = Color3.fromRGB(245, 245, 245)
    TitleBar.BorderSizePixel = 0
    TitleBar.Parent = MainFrame

    -- Borda arredondada apenas no topo
    local TitleBarCorner = Instance.new("UICorner")
    TitleBarCorner.CornerRadius = UDim.new(0, 6)
    TitleBarCorner.Parent = TitleBar

    local Title = Instance.new("TextLabel")
    Title.Text = "  " .. titleText
    Title.Size = UDim2.new(1, -60, 1, 0)
    Title.BackgroundTransparency = 1
    Title.TextColor3 = Color3.fromRGB(0, 0, 0)
    Title.Font = Enum.Font.SourceSans
    Title.TextSize = 16
    Title.TextXAlignment = Enum.TextXAlignment.Left
    Title.Parent = TitleBar

    local MinimizeButton = Instance.new("TextButton")
    MinimizeButton.Text = "—"
    MinimizeButton.Size = UDim2.new(0, 30, 1, 0)
    MinimizeButton.Position = UDim2.new(1, -60, 0, 0)
    MinimizeButton.BackgroundTransparency = 1
    MinimizeButton.TextColor3 = Color3.fromRGB(0, 0, 0)
    MinimizeButton.Font = Enum.Font.SourceSans
    MinimizeButton.TextSize = 18
    MinimizeButton.BorderSizePixel = 0
    MinimizeButton.Parent = TitleBar

    local CloseButton = Instance.new("TextButton")
    CloseButton.Text = "X"
    CloseButton.Size = UDim2.new(0, 30, 1, 0)
    CloseButton.Position = UDim2.new(1, -30, 0, 0)
    CloseButton.BackgroundTransparency = 1
    CloseButton.TextColor3 = Color3.fromRGB(0, 0, 0)
    CloseButton.Font = Enum.Font.SourceSans
    CloseButton.TextSize = 18
    CloseButton.BorderSizePixel = 0
    CloseButton.Parent = TitleBar

    local Sidebar = Instance.new("Frame")
    Sidebar.Size = UDim2.new(0, 140, 1, -30)
    Sidebar.Position = UDim2.new(0, 0, 0, 30)
    Sidebar.BackgroundColor3 = Color3.fromRGB(250, 250, 250)
    Sidebar.BorderSizePixel = 0
    Sidebar.Parent = MainFrame

    local ContentArea = Instance.new("ScrollingFrame")
    ContentArea.Size = UDim2.new(1, -140, 1, -30)
    ContentArea.Position = UDim2.new(0, 140, 0, 30)
    ContentArea.CanvasSize = UDim2.new(0, 0, 10, 0)
    ContentArea.ScrollBarThickness = 6
    ContentArea.ScrollBarImageColor3 = Color3.fromRGB(51, 95, 254)
    ContentArea.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ContentArea.BorderSizePixel = 0
    ContentArea.Parent = MainFrame

    local UserFrame = Instance.new("Frame")
    UserFrame.Size = UDim2.new(1, 0, 0, 50)
    UserFrame.Position = UDim2.new(0, 0, 1, -50)
    UserFrame.BackgroundColor3 = Color3.fromRGB(245, 245, 245)
    UserFrame.BorderSizePixel = 0
    UserFrame.Parent = Sidebar

    -- Borda arredondada na parte inferior
    local UserFrameCorner = Instance.new("UICorner")
    UserFrameCorner.CornerRadius = UDim.new(0, 6)
    UserFrameCorner.Parent = UserFrame

    local ProfilePic = Instance.new("ImageLabel")
    ProfilePic.Size = UDim2.new(0, 30, 0, 30)
    ProfilePic.Position = UDim2.new(0, 10, 0.5, -15)
    ProfilePic.BackgroundTransparency = 1
    ProfilePic.Image = Players:GetUserThumbnailAsync(LocalPlayer.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size100x100)
    ProfilePic.Parent = UserFrame

    local Username = Instance.new("TextLabel")
    Username.Text = LocalPlayer.DisplayName
    Username.Position = UDim2.new(0, 50, 0, 0)
    Username.Size = UDim2.new(1, -60, 1, 0)
    Username.BackgroundTransparency = 1
    Username.TextColor3 = Color3.fromRGB(0, 0, 0)
    Username.TextXAlignment = Enum.TextXAlignment.Left
    Username.Font = Enum.Font.SourceSans
    Username.TextSize = 14
    Username.Parent = UserFrame

    local TabList = {}
    local isMinimized = false
    local originalSize = MainFrame.Size

    CloseButton.MouseButton1Click:Connect(function()
        ScreenGui:Destroy()
    end)

    MinimizeButton.MouseButton1Click:Connect(function()
        if not isMinimized then
            MainFrame.Size = UDim2.new(0, 500, 0, 30)
            Sidebar.Visible = false
            ContentArea.Visible = false
            isMinimized = true
        else
            MainFrame.Size = originalSize
            Sidebar.Visible = true
            ContentArea.Visible = true
            isMinimized = false
        end
    end)

    function RobloxUI:CreateTab(name, icon)
        local Tab = Instance.new("TextButton")
        Tab.Size = UDim2.new(1, -20, 0, 40)
        Tab.Position = UDim2.new(0, 10, 0, 10 + #TabList * 50)
        Tab.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
        Tab.TextColor3 = Color3.fromRGB(0, 0, 0)
        Tab.Font = Enum.Font.SourceSans
        Tab.TextSize = 16
        Tab.BorderSizePixel = 0
        Tab.AutoButtonColor = false
        Tab.Parent = Sidebar
        
        -- Ajuste de posição do texto com/without ícone
        if icon then
            Tab.Text = "       " .. name
            Tab.TextXAlignment = Enum.TextXAlignment.Left
            
            local Icon = Instance.new("ImageLabel")
            Icon.Size = UDim2.new(0, 20, 0, 20)
            Icon.Position = UDim2.new(0, 8, 0.5, -10)
            Icon.BackgroundTransparency = 1
            Icon.Image = icon
            Icon.Parent = Tab
        else
            Tab.Text = name
            Tab.TextXAlignment = Enum.TextXAlignment.Center
        end

        local Underline = Instance.new("Frame")
        Underline.Size = UDim2.new(1, 0, 0, 2)
        Underline.Position = UDim2.new(0, 0, 1, -2)
        Underline.BackgroundColor3 = Color3.fromRGB(51, 95, 254)
        Underline.Visible = false
        Underline.BorderSizePixel = 0
        Underline.Parent = Tab

        local TabFrame = Instance.new("Frame")
        TabFrame.Size = UDim2.new(1, 0, 0, 1000)
        TabFrame.BackgroundTransparency = 1
        TabFrame.Visible = (#TabList == 0)
        TabFrame.Parent = ContentArea

        local yPos = 10

        local function UpdateTabSelection()
            for _, t in ipairs(TabList) do
                t.Tab.TextColor3 = Color3.fromRGB(0, 0, 0)
                t.Underline.Visible = false
            end
            Tab.TextColor3 = Color3.fromRGB(51, 95, 254)
            Underline.Visible = true
        end

        local tabData = {}

        function tabData:AddSection(title)
            local Section = Instance.new("TextLabel")
            Section.Size = UDim2.new(1, -20, 0, 20)
            Section.Position = UDim2.new(0, 10, 0, yPos)
            Section.Text = " " .. title
            Section.BackgroundTransparency = 1
            Section.TextColor3 = Color3.fromRGB(51, 95, 254)
            Section.Font = Enum.Font.SourceSansBold
            Section.TextSize = 16
            Section.TextXAlignment = Enum.TextXAlignment.Left
            Section.Parent = TabFrame
            
            local Line = Instance.new("Frame")
            Line.Size = UDim2.new(1, -20, 0, 1)
            Line.Position = UDim2.new(0, 10, 0, yPos + 20)
            Line.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
            Line.BorderSizePixel = 0
            Line.Parent = TabFrame
            
            yPos = yPos + 30
        end

        function tabData:AddButton(text, callback)
            local Button = Instance.new("TextButton")
            Button.Size = UDim2.new(1, -20, 0, 30)
            Button.Position = UDim2.new(0, 10, 0, yPos)
            Button.Text = text
            Button.BackgroundColor3 = Color3.fromRGB(51, 95, 254)
            Button.TextColor3 = Color3.fromRGB(255, 255, 255)
            Button.Font = Enum.Font.SourceSans
            Button.TextSize = 16
            Button.BorderSizePixel = 0
            Button.AutoButtonColor = true
            Button.Parent = TabFrame
            
            -- Borda arredondada no botão
            local ButtonCorner = Instance.new("UICorner")
            ButtonCorner.CornerRadius = UDim.new(0, 4)
            ButtonCorner.Parent = Button

            Button.MouseButton1Click:Connect(function()
                if callback then callback() end
            end)

            yPos = yPos + 40
        end

        function tabData:AddToggle(text, callback)
            local Toggle = Instance.new("TextButton")
            Toggle.Size = UDim2.new(1, -20, 0, 30)
            Toggle.Position = UDim2.new(0, 10, 0, yPos)
            Toggle.Text = text .. " [OFF]"
            Toggle.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
            Toggle.TextColor3 = Color3.fromRGB(0, 0, 0)
            Toggle.Font = Enum.Font.SourceSans
            Toggle.TextSize = 16
            Toggle.BorderSizePixel = 0
            Toggle.Parent = TabFrame
            
            -- Borda arredondada no toggle
            local ToggleCorner = Instance.new("UICorner")
            ToggleCorner.CornerRadius = UDim.new(0, 4)
            ToggleCorner.Parent = Toggle

            local toggled = false

            Toggle.MouseButton1Click:Connect(function()
                toggled = not toggled
                Toggle.Text = text .. (toggled and " [ON]" or " [OFF]")
                if callback then callback(toggled) end
            end)

            yPos = yPos + 40
        end

        function tabData:AddTextbox(placeholder, callback)
            local Box = Instance.new("TextBox")
            Box.Size = UDim2.new(1, -20, 0, 30)
            Box.Position = UDim2.new(0, 10, 0, yPos)
            Box.PlaceholderText = placeholder
            Box.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
            Box.TextColor3 = Color3.fromRGB(0, 0, 0)
            Box.Font = Enum.Font.SourceSans
            Box.TextSize = 16
            Box.BorderSizePixel = 0
            Box.Parent = TabFrame
            
            -- Borda arredondada no textbox
            local BoxCorner = Instance.new("UICorner")
            BoxCorner.CornerRadius = UDim.new(0, 4)
            BoxCorner.Parent = Box

            Box.FocusLost:Connect(function()
                if callback then callback(Box.Text) end
            end)

            yPos = yPos + 40
        end

        function tabData:AddDropdown(title, options, callback)
            local Button = Instance.new("TextButton")
            Button.Size = UDim2.new(1, -20, 0, 30)
            Button.Position = UDim2.new(0, 10, 0, yPos)
            Button.Text = title .. " ▼"
            Button.BackgroundColor3 = Color3.fromRGB(240, 240, 240)
            Button.TextColor3 = Color3.fromRGB(0, 0, 0)
            Button.Font = Enum.Font.SourceSans
            Button.TextSize = 16
            Button.BorderSizePixel = 0
            Button.Parent = TabFrame
            
            -- Borda arredondada no dropdown
            local ButtonCorner = Instance.new("UICorner")
            ButtonCorner.CornerRadius = UDim.new(0, 4)
            ButtonCorner.Parent = Button

            local open = false

            local Dropdown = Instance.new("ScrollingFrame")
            Dropdown.Size = UDim2.new(1, -40, 0, math.min(150, #options * 25))
            Dropdown.Position = UDim2.new(0, 30, 0, yPos + 30)
            Dropdown.CanvasSize = UDim2.new(0, 0, 0, #options * 25)
            Dropdown.BackgroundColor3 = Color3.fromRGB(230, 230, 230)
            Dropdown.BorderSizePixel = 0
            Dropdown.ScrollBarThickness = 6
            Dropdown.ScrollBarImageColor3 = Color3.fromRGB(51, 95, 254)
            Dropdown.Visible = false
            Dropdown.Parent = TabFrame
            
            -- Borda arredondada no dropdown aberto
            local DropdownCorner = Instance.new("UICorner")
            DropdownCorner.CornerRadius = UDim.new(0, 4)
            DropdownCorner.Parent = Dropdown

            for i, option in ipairs(options) do
                local Item = Instance.new("TextButton")
                Item.Size = UDim2.new(1, 0, 0, 25)
                Item.Position = UDim2.new(0, 0, 0, (i - 1) * 25)
                Item.Text = option
                Item.BackgroundColor3 = Color3.fromRGB(220, 220, 220)
                Item.TextColor3 = Color3.fromRGB(0, 0, 0)
                Item.Font = Enum.Font.SourceSans
                Item.TextSize = 14
                Item.BorderSizePixel = 0
                Item.Parent = Dropdown
                
                -- Borda arredondada nos itens
                local ItemCorner = Instance.new("UICorner")
                ItemCorner.CornerRadius = UDim.new(0, 4)
                ItemCorner.Parent = Item

                Item.MouseButton1Click:Connect(function()
                    if callback then callback(option) end
                    Dropdown.Visible = false
                    Button.Text = title .. " ▼"
                    open = false
                end)
            end

            Button.MouseButton1Click:Connect(function()
                open = not open
                Dropdown.Visible = open
                Button.Text = title .. (open and " ▲" or " ▼")
                -- Ajustar posição dos elementos abaixo quando o dropdown abre/fecha
                if open then
                    yPos = yPos + math.min(150, #options * 25)
                else
                    yPos = yPos - math.min(150, #options * 25)
                end
            end)

            yPos = yPos + 40
        end

        Tab.MouseButton1Click:Connect(function()
            for _, obj in pairs(ContentArea:GetChildren()) do
                if obj:IsA("Frame") then
                    obj.Visible = false
                end
            end
            TabFrame.Visible = true
            UpdateTabSelection()
        end)

        table.insert(TabList, {Tab = Tab, Underline = Underline})
        return tabData
    end

    return RobloxUI
end

return RobloxUI
